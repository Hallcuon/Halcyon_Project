services:
  # Managed PostgreSQL Database. Render handles backups, scaling, etc.
  - type: db
    name: postgres-db-managed
    databaseName: mapproject_db
    user: mapproject_user
    plan: free # or starter

  # Managed Redis instance for Channels (WebSocket message broker)
  - type: redis
    name: redis-channels
    plan: free # or starter

  # Сервіс бекенду (Django Web Service)
  - type: web
    name: mapproject-backend
    env: docker
    plan: free # або starter
    dockerContext: .
    dockerfilePath: ./Dockerfile
    healthCheckPath: /admin/login/ # Шлях для перевірки, що сервіс живий
    envVars:
      - key: DATABASE_URL
        fromService:
          type: db
          name: postgres-db-managed
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-channels
          property: connectionString
      - key: SECRET_KEY
        generateValue: true # Render згенерує безпечний ключ
      - key: DEBUG
        value: false
      - key: ALLOWED_HOSTS
        # Render автоматично додасть свій домен
        value: .onrender.com
      - key: CORS_ALLOWED_ORIGINS
        # Встав сюди URL твого фронтенду на Render
        value: https://твій-фронтенд-сайт.onrender.com
      - key: CSRF_TRUSTED_ORIGINS
        value: https://твій-фронтенд-сайт.onrender.com

  # Статичний сайт для фронтенду
  - type: static
    name: mapproject-frontend
    # Specify the directory containing the frontend code
    rootDir: frontend
    plan: free
    buildCommand: "npm install && npm run build" # Assumes vite.config.js is correctly set up
    staticPublishPath: ./frontend/dist
    envVars:
      # This key will need to be added manually in the Render dashboard for security.
      - key: VITE_GOOGLE_MAPS_API_KEY
        sync: false
      # The base URL for the API that the frontend will call.
      - key: VITE_API_BASE_URL
        value: https://mapproject-backend.onrender.com # URL твого бекенду